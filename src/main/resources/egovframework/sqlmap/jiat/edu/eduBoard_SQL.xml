<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="eduBoard">

    <!-- 게시글 목록 조회 (전체) -->
    <select id="selectList" resultType="egovframework.com.cms.edu.model.EduBoardVO">
        SELECT 
            id,
            title,
            content,
            writer,
            created_at as createdAt,
            views,
            is_secret as isSecret,
            secret_password as secretPassword,
            is_notice as isNotice,
            is_important as isImportant
        FROM edu_board
        ORDER BY 
            is_important DESC,
            is_notice DESC,
        <choose>
            <when test="sortType == 'views'">
                views DESC, created_at DESC
            </when>
            <otherwise>
                created_at DESC
            </otherwise>
        </choose>
    </select>

    <!-- 게시글 목록 조회 (페이징) -->
    <select id="selectListWithPaging" parameterType="egovframework.com.cms.edu.model.PagingVO" 
            resultType="egovframework.com.cms.edu.model.EduBoardVO">
        <choose>
            <when test="tab == 'notice'">
                <!-- 공지사항 탭: 모든 공지사항 표시 -->
                SELECT 
                    id,
                    title,
                    content,
                    writer,
                    created_at as createdAt,
                    views,
                    is_secret as isSecret,
                    secret_password as secretPassword,
                    is_notice as isNotice,
                    is_important as isImportant
                FROM edu_board
                <where>
                    is_notice = true
                    <if test="searchKeyword != null and searchKeyword != ''">
                        <choose>
                            <when test="searchType == 'title'">
                                AND title LIKE CONCAT('%', #{searchKeyword}, '%')
                            </when>
                            <when test="searchType == 'writer'">
                                AND writer LIKE CONCAT('%', #{searchKeyword}, '%')
                            </when>
                            <otherwise>
                                <!-- titleContent 또는 기본값 -->
                                AND (title LIKE CONCAT('%', #{searchKeyword}, '%') 
                                     OR content LIKE CONCAT('%', #{searchKeyword}, '%'))
                            </otherwise>
                        </choose>
                    </if>
                </where>
                ORDER BY 
                    is_important DESC,
                <choose>
                    <when test="sortType == 'views'">
                        views DESC, created_at DESC
                    </when>
                    <otherwise>
                        created_at DESC
                    </otherwise>
                </choose>
                LIMIT #{pageSize} OFFSET #{offset}
            </when>
            <otherwise>
                <!-- 일반게시판 탭: 모든 페이지 상단에 중요 공지 최대 2개 고정 -->
                (
                    <!-- 중요 공지 최대 2개 (모든 페이지 상단 고정) -->
                    SELECT 
                        id,
                        title,
                        content,
                        writer,
                        created_at as createdAt,
                        views,
                        is_secret as isSecret,
                        secret_password as secretPassword,
                        is_notice as isNotice,
                        is_important as isImportant,
                        1 as post_order
                    FROM edu_board
                    <where>
                        is_important = true
                        <if test="searchKeyword != null and searchKeyword != ''">
                            <choose>
                                <when test="searchType == 'title'">
                                    AND title LIKE CONCAT('%', #{searchKeyword}, '%')
                                </when>
                                <when test="searchType == 'writer'">
                                    AND writer LIKE CONCAT('%', #{searchKeyword}, '%')
                                </when>
                                <otherwise>
                                    AND (title LIKE CONCAT('%', #{searchKeyword}, '%') 
                                         OR content LIKE CONCAT('%', #{searchKeyword}, '%'))
                                </otherwise>
                            </choose>
                        </if>
                    </where>
                    ORDER BY created_at DESC
                    LIMIT 2
                )
                UNION ALL
                (
                    <!-- 일반글 (페이징 적용) -->
                    SELECT 
                        id,
                        title,
                        content,
                        writer,
                        created_at as createdAt,
                        views,
                        is_secret as isSecret,
                        secret_password as secretPassword,
                        is_notice as isNotice,
                        is_important as isImportant,
                        2 as post_order
                    FROM edu_board
                    <where>
                        is_notice = false
                        <if test="searchKeyword != null and searchKeyword != ''">
                            <choose>
                                <when test="searchType == 'title'">
                                    AND title LIKE CONCAT('%', #{searchKeyword}, '%')
                                </when>
                                <when test="searchType == 'writer'">
                                    AND writer LIKE CONCAT('%', #{searchKeyword}, '%')
                                </when>
                                <otherwise>
                                    AND (title LIKE CONCAT('%', #{searchKeyword}, '%') 
                                         OR content LIKE CONCAT('%', #{searchKeyword}, '%'))
                                </otherwise>
                            </choose>
                        </if>
                    </where>
                    ORDER BY 
                    <choose>
                        <when test="sortType == 'views'">
                            views DESC, created_at DESC
                        </when>
                        <otherwise>
                            created_at DESC
                        </otherwise>
                    </choose>
                    LIMIT #{pageSize} OFFSET #{offset}
                )
                ORDER BY post_order, 
                <choose>
                    <when test="sortType == 'views'">
                        views DESC, createdAt DESC
                    </when>
                    <otherwise>
                        createdAt DESC
                    </otherwise>
                </choose>
            </otherwise>
        </choose>
    </select>

    <!-- 전체 게시글 수 조회 (탭별 필터링 적용) -->
    <select id="selectTotalCount" parameterType="egovframework.com.cms.edu.model.PagingVO" resultType="int">
        SELECT COUNT(*) 
        FROM edu_board
        <where>
            <choose>
                <when test="tab == 'notice'">
                    <!-- 공지사항 탭: 공지사항만 카운트 -->
                    is_notice = true
                </when>
                <otherwise>
                    <!-- 일반게시판 탭: 일반글만 카운트 (중요 공지는 항상 상단 고정이므로 제외) -->
                    is_notice = false
                </otherwise>
            </choose>
            <if test="searchKeyword != null and searchKeyword != ''">
                <choose>
                    <when test="searchType == 'title'">
                        AND title LIKE CONCAT('%', #{searchKeyword}, '%')
                    </when>
                    <when test="searchType == 'writer'">
                        AND writer LIKE CONCAT('%', #{searchKeyword}, '%')
                    </when>
                    <otherwise>
                        <!-- titleContent 또는 기본값 -->
                        AND (title LIKE CONCAT('%', #{searchKeyword}, '%') 
                             OR content LIKE CONCAT('%', #{searchKeyword}, '%'))
                    </otherwise>
                </choose>
            </if>
        </where>
    </select>

    <!-- 게시글 상세 조회 -->
    <select id="selectDetail" parameterType="long" resultType="egovframework.com.cms.edu.model.EduBoardVO">
        SELECT 
            id,
            title,
            content,
            writer,
            created_at as createdAt,
            views,
            is_secret as isSecret,
            secret_password as secretPassword,
            is_notice as isNotice,
            is_important as isImportant
        FROM edu_board
        WHERE id = #{id}
    </select>

    <!-- 게시글 등록 -->
    <insert id="insert" parameterType="egovframework.com.cms.edu.model.EduBoardVO" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO edu_board (
            title,
            content,
            writer,
            created_at,
            views,
            is_secret,
            secret_password,
            is_notice,
            is_important
        ) VALUES (
            #{title},
            #{content},
            #{writer},
            NOW(),
            0,
            #{isSecret},
            #{secretPassword},
            #{isNotice},
            #{isImportant}
        )
    </insert>

    <!-- 게시글 수정 -->
    <update id="update" parameterType="egovframework.com.cms.edu.model.EduBoardVO">
        UPDATE edu_board
        SET 
            title = #{title},
            content = #{content},
            writer = #{writer},
            is_secret = #{isSecret},
            secret_password = #{secretPassword},
            is_notice = #{isNotice},
            is_important = #{isImportant}
        WHERE id = #{id}
    </update>

    <!-- 게시글 삭제 -->
    <delete id="delete" parameterType="long">
        DELETE FROM edu_board
        WHERE id = #{id}
    </delete>

    <!-- 조회수 증가 -->
    <update id="updateViews" parameterType="long">
        UPDATE edu_board
        SET views = views + 1
        WHERE id = #{id}
    </update>

    <!-- 이전글 조회 -->
    <select id="selectPrevPost" parameterType="long" resultType="egovframework.com.cms.edu.model.EduBoardVO">
        SELECT 
            id,
            title,
            content,
            writer,
            created_at as createdAt,
            views,
            is_secret as isSecret,
            secret_password as secretPassword,
            is_notice as isNotice,
            is_important as isImportant
        FROM edu_board
        WHERE id &lt; #{id}
        ORDER BY id DESC
        LIMIT 1
    </select>

    <!-- 다음글 조회 -->
    <select id="selectNextPost" parameterType="long" resultType="egovframework.com.cms.edu.model.EduBoardVO">
        SELECT 
            id,
            title,
            content,
            writer,
            created_at as createdAt,
            views,
            is_secret as isSecret,
            secret_password as secretPassword,
            is_notice as isNotice,
            is_important as isImportant
        FROM edu_board
        WHERE id &gt; #{id}
        ORDER BY id ASC
        LIMIT 1
    </select>

    <!-- 파일 관련 쿼리들 -->
    
    <!-- 게시글의 첨부파일 목록 조회 -->
    <select id="selectFilesByBoardId" parameterType="long" resultType="egovframework.com.cms.edu.model.EduFileVO">
        SELECT 
            id,
            board_id as boardId,
            original_name as originalName,
            saved_name as savedName,
            file_path as filePath,
            file_size as fileSize,
            upload_date as uploadDate
        FROM edu_file
        WHERE board_id = #{boardId}
        ORDER BY upload_date ASC
    </select>

    <!-- 파일 정보 등록 -->
    <insert id="insertFile" parameterType="egovframework.com.cms.edu.model.EduFileVO" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO edu_file (
            board_id,
            original_name,
            saved_name,
            file_path,
            file_size,
            upload_date
        ) VALUES (
            #{boardId},
            #{originalName},
            #{savedName},
            #{filePath},
            #{fileSize},
            NOW()
        )
    </insert>

    <!-- 파일 삭제 -->
    <delete id="deleteFile" parameterType="long">
        DELETE FROM edu_file
        WHERE id = #{fileId}
    </delete>

    <!-- 게시글의 모든 파일 삭제 -->
    <delete id="deleteFilesByBoardId" parameterType="long">
        DELETE FROM edu_file
        WHERE board_id = #{boardId}
    </delete>

    <!-- 파일 정보 조회 -->
    <select id="selectFileById" parameterType="long" resultType="egovframework.com.cms.edu.model.EduFileVO">
        SELECT 
            id,
            board_id as boardId,
            original_name as originalName,
            saved_name as savedName,
            file_path as filePath,
            file_size as fileSize,
            upload_date as uploadDate
        FROM edu_file
        WHERE id = #{fileId}
    </select>

</mapper>
